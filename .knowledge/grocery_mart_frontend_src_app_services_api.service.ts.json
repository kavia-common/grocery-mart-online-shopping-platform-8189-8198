{"is_source_file": true, "format": "TypeScript", "description": "This file defines an Angular service 'ApiService' that provides methods to interact with the backend API for an online grocery shopping platform. It includes methods for fetching categories, products, user authentication, registration, order placement, and token management.", "external_files": ["../models/types", "../../environments/environment", "../utils/platform"], "external_methods": ["inject(HttpClient)", "inject(TOKEN_KEY)", "environment.apiBaseUrl", "safeStorage.getItem", "safeStorage.setItem", "safeStorage.removeItem", "buildUrl"], "published": ["ApiService"], "classes": [{"name": "ApiService", "description": "Angular service class that encapsulates API calls for user authentication, product retrieval, order processing, and token management."}], "methods": [{"name": "headers", "description": "Getter that constructs HttpHeaders with the current authorization token if available."}, {"name": "getCategories", "description": "Fetches all product categories from the backend API."}, {"name": "getProducts", "description": "Fetches products, optionally filtered by category ID or search query."}, {"name": "login", "description": "Authenticates user with email and password, returns an observable of AuthUser."}, {"name": "register", "description": "Registers a new user account with name, email, and password."}, {"name": "me", "description": "Retrieves the current user's profile information based on stored token."}, {"name": "checkout", "description": "Places an order with specified items, shipping address, and payment info."}, {"name": "getMyOrders", "description": "Retrieves order history for the current user."}, {"name": "setToken", "description": "Stores the authentication token securely."}, {"name": "clearToken", "description": "Removes the stored authentication token, effectively logging out the user."}], "calls": ["this.http.get", "this.http.post"], "search-terms": ["Angular ApiService", "HTTP client", "Authentication", "Order placement", "Product retrieval", "Token management"], "state": 2, "file_id": 24, "knowledge_revision": 109, "git_revision": "", "revision_history": [{"50": ""}, {"109": ""}], "ctags": [{"_type": "tag", "name": "ApiService", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^export class ApiService {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "TOKEN_KEY", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^const TOKEN_KEY = 'gm_auth_token';$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "h", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^    let h = new HttpHeaders({ 'Content-Type': 'application\\/json' });$/", "language": "TypeScript", "kind": "variable"}, {"_type": "tag", "name": "http", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^  private http = inject(HttpClient);$/", "language": "TypeScript", "kind": "property", "scope": "ApiService", "scopeKind": "class"}, {"_type": "tag", "name": "token", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^    const token = safeStorage.getItem(TOKEN_KEY);$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "url", "path": "/home/kavia/workspace/code-generation/grocery-mart-online-shopping-platform-8189-8198/grocery_mart_frontend/src/app/services/api.service.ts", "pattern": "/^    const url = buildUrl(`${this.base}\\/products`, {$/", "language": "TypeScript", "kind": "constant"}], "hash": "34a498f5d89f31e5ed392070c1320cc9", "format-version": 4, "code-base-name": "grocery_mart_frontend", "filename": "grocery_mart_frontend/src/app/services/api.service.ts", "fields": [{"name": "let h = new HttpHeaders({ 'Content-Type': 'application\\/json' });", "scope": "", "scopeKind": "", "description": "unavailable"}, {"name": "private http = inject(HttpClient);", "scope": "ApiService", "scopeKind": "class", "description": "unavailable"}]}